{"version":3,"sources":["webpack:///./src/app/main/main.ts","webpack:///./src/bootstrap/index.ts","webpack:///./src/radioactive/radioactive.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iHAA6D;AAE7D,MAAa,IAAK,SAAQ,WAAW,CAAC,OAAO;IAA7C;;QAEI,SAAI,GAAG;YACH,IAAI,EAAE,MAAM;SACf,CAAC;IACN,CAAC;;AAJU,QAAG,GAAG,oBAAoB,CAAC;AADtC,oBAKC;AAED,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACTtC,uEAA4B;AAE5B,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAS,EAAE;IAErD,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;IAC9C,uDAAa,gDAAkB,EAAC,CAAC;AAErC,CAAC,EAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACPH,8FAAwD;AAExD,SAAS,aAAa,CAAC,EAAU;IAC7B,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;AACpB,CAAC;AASD,MAAa,OAAQ,SAAQ,WAAW;IAKpC;QACI,KAAK,EAAE,CAAC;QAHZ,WAAM,GAAG,eAAI,CAAC;QAIV,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAGK,IAAI;;YACN,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YACnC,MAAM,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC/C,MAAM,GAAG,GAAI,SAAiB,CAAC,GAAG,CAAC;YAGnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBAC3B,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAS,CAAC;gBACrC,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAG3C,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,GAAG,gBAAgB,CAAC,CAAC;gBAGhD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;gBACvC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,GAAG,YAAY,CAAC,CAAC;gBAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAEhC,SAAS,CAAC,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,SAAS,CAAC,QAAQ,GAAG,GAAG,EAAE;oBACtB,MAAM,EAAE,GAAG;;0BAED,SAAS,CAAC,IAAI;;iBAEvB,CAAC;oBACF,MAAM,cAAc,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBACpD,OAAO,cAAc,CAAC;gBAC1B,CAAC,CAAC;aACL;YAED,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;KAAA;IAGD,MAAM;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACtD,iBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;;AA/CM,aAAK,GAAU,EAAE,CAAC;AAF7B,0BAmDC","file":"main.cfb0b51c21d2cd7ca16d.js","sourcesContent":["import * as Radioactive from '../../radioactive/radioactive';\n\nexport class Main extends Radioactive.Element {\n    static url = `/src/app/main/main`;\n    data = {\n        test: 'yeah',\n    };\n}\n\ncustomElements.define('r-main', Main);","import '../scss/index.scss';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n\n    document.body.innerHTML = `<r-main></r-main>`;\n    await import(`../app/main/main`);\n\n});","import { html, render, TemplateResult } from 'lit-html';\n\nfunction evalInContext(js: string) {\n    return eval(js);\n}\n\nexport interface Cache {\n    [className: string]: {\n        template: () => TemplateResult;\n        html: string;\n    }\n}\n\nexport class Element extends HTMLElement {\n\n    static cache: Cache = {};\n    __html = html;\n\n    constructor() {\n        super();\n        this.init();\n    }\n\n    // lifecycle\n    async init() {\n        const mainClass = this.constructor;\n        const className = mainClass.name.toLowerCase();\n        const url = (mainClass as any).url;\n\n        // if first instance of that custom element\n        if (!Element.cache[className]) {\n            Element.cache[className] = {} as any;\n            const thisCache = Element.cache[className];\n\n            // get the template\n            const res = await fetch(`${url}.template.html`);\n\n            // add style\n            const link = document.createElement('style');\n            link.setAttribute('rel', 'stylesheet');\n            link.setAttribute('href', `${url}.style.css`);\n            document.head.appendChild(link);\n\n            thisCache.html = await res.text();\n            thisCache.template = () => {\n                const js = `\n                    this.__html\\`\n                        ${thisCache.html}\n                    \\`\n                `;\n                const templateResult = evalInContext.call(this, js);\n                return templateResult;\n            };\n        }\n\n        this.render();\n    }\n\n    // methods\n    render() {\n        const className = this.constructor.name.toLowerCase();\n        render(Element.cache[className].template(), this);\n    }\n\n}\n"],"sourceRoot":""}